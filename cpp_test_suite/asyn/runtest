#!/bin/bash

#
# remove different echo command behaviour on different OS
#
if test "`echo -e xxx`" = "xxx"
then
    echo="echo -e"
else
    echo=echo
fi

if [ $# = 0 ]
then
	$echo "\nusage:  runtest ds_system\n"
	$echo "ds_system can be ubuntu904, python or \"jenkins <dir>\""
	exit 1
fi

#
# test host
#

UBUNTU904_HOST=pcantares
PYTHON_HOST=controls02

HOST=`hostname`
SERV_NAME=devTest


case $1 in
ubuntu904 )
	if [ $HOST != $UBUNTU904_HOST ]
	then
		$echo "For ubuntu 9.04, test should run on "$UBUNTU904_HOST
		exit 1
	fi
	DIR=bin/ubuntu904
	DEV1="dev/test/10"
	DEV2="dev/test/11"
	DEV3="dev/test/12"
	DEV1_ALIAS="et_alias"
	;;
#
python )
	if [ $HOST != $PYTHON_HOST ]
	then
		$echo "For python, test should run on "$PYTHON_HOST
		exit 1
	fi
	DIR=suse93
	;;
#
jenkins )
	if [ $# != 2 ]
	then
		echo "Mising base directory"
		exit -1
	fi
	BASE_DIR=$2
	for i in $NODE_LABELS
	do
		echo $i
		if [ $i = "ubuntu10.04" ]
		then
			echo "Ubuntu 10.04 OS"
			DIR="$BASE_DIR/ubuntu1004/bin"
			DEV1="test/ubuntu1004/10"
			DEV2="test/ubuntu1004/11"
			DEV3="test/ubuntu1004/12"
			DEV1_ALIAS="ubuntu1004_alias"
		fi
	
		if [ $i = "solaris10" ]
		then
			echo "Solaris 10 OS"
			DIR="$BASE_DIR/solaris10_CC/bin"
			DEV1="test/solaris10/10"
			DEV2="test/solaris10/11"
			DEV3="test/solaris10/12"
			DEV1_ALIAS="solaris10_alias"
		fi

		if [ $i = "Windows_VC9" ]
		then
			echo "Windows VC9"
			DIR="$BASE_DIR/win32/bin"
			DEV1="test/win32_vc9/10"
			DEV2="test/win32_vc9/11"
			DEV3="test/win32_vc9/12"
			DEV1_ALIAS="win32_vc9_alias"
		fi
	
		if [ $i = "centos5" ]
		then
			echo "CentOS 5 OS"
			DIR="$BASE_DIR/centos5/bin"
			DEV1="test/centos5/10"
			DEV2="test/centos5/11"
			DEV3="test/centos5/12"
			DEV1_ALIAS="centos5_alias"
		fi

		if [ $i = "redhate4" ]
		then
			echo "Red Hat 4 OS"
			DIR="$BASE_DIR/redhate4/bin"
			DEV1="test/redhate4/10"
			DEV2="test/redhate4/11"
			DEV3="test/redhate4/12"
			DEV1_ALIAS="redhate4_alias"
		fi
	done
	;;
#
* )
	$echo "\nunknown system"
	exit 1
	;;
esac

check_return_value () {
if [ $1 != "0" ]
then
	echo "Test Suite FAILED !!!!!!!!!!!!!!!!!!"
	echo "Leaving test suite, try to fix it"
	exit -1
fi
}

#
# First, test device server startup sequence
#

$echo "\nTesting executing command asynchronously (polling way)"
$DIR/asyn_cmd $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting reading attribute asynchronously (polling way)"
$DIR/asyn_attr $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting reading several attributes asynchronously (polling way)"
$DIR/asyn_attr_multi $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting writing attribute asynchronously (polling way)"
$DIR/asyn_write_attr $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting writing several attributes asynchronously (polling way)"
$DIR/asyn_write_attr_multi $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting mixed asynchronous and callback modes (1)"
$DIR/asyn_cb $DEV1 $DEV2
ret=$?
check_return_value $ret
#
$echo "\nTesting mixed asynchronous and callback modes (2)"
$DIR/asyn_cb2 $DEV1 $DEV2
ret=$?
check_return_value $ret
#
$echo "\nTesting executing command asynchronously (callback way)"
$DIR/asyn_cb_cmd $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting reading attribute asynchronously (callback way)"
$DIR/asyn_attr_cb $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting writing attribute asynchronously (callback way)"
$DIR/asyn_write_cb $DEV1
ret=$?
check_return_value $ret
#
$echo "\nTesting automatic callback mode"
$DIR/auto_asyn_cmd $DEV1
ret=$?
check_return_value $ret
#
